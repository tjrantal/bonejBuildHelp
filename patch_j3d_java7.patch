From 5d7d2b06f3c8973c32378de287e1d170aa576c80 Mon Sep 17 00:00:00 2001
From: Timo Rantalainen <tjrantal@gmail.com>
Date: Sat, 25 Aug 2012 08:32:31 +0300
Subject: [PATCH 1/3] Patched build.xml

---
 j3d-core/src/native/build.xml |    1 +
 1 file changed, 1 insertion(+)

diff --git a/j3d-core/src/native/build.xml b/j3d-core/src/native/build.xml
index 89b6d86..881e268 100644
--- a/j3d-core/src/native/build.xml
+++ b/j3d-core/src/native/build.xml
@@ -347,6 +347,7 @@
     <javah destdir="${javahCoreTarget}" force="yes">
 	<classpath>
 	    <pathelement path="${build}/${platform}/${bldType}/classes"/>
+		<pathelement path="${vecmath_home}/build/debug/classes"/> <!--Added vecmath to classpath>
 	</classpath>
 	
 	<class name="javax.media.j3d.Background"/>
-- 
1.7.9.5


From a21f8a50db1b23e06bb79194b97bc29a3258f117 Mon Sep 17 00:00:00 2001
From: Timo Rantalainen <tjrantal@gmail.com>
Date: Sat, 25 Aug 2012 08:38:23 +0300
Subject: [PATCH 2/3] Patched ImageComponentState

---
 .../state/javax/media/j3d/ImageComponentState.java |   32 +++++++++-----------
 1 file changed, 15 insertions(+), 17 deletions(-)

diff --git a/j3d-core-utils/src/classes/share/com/sun/j3d/utils/scenegraph/io/state/javax/media/j3d/ImageComponentState.java b/j3d-core-utils/src/classes/share/com/sun/j3d/utils/scenegraph/io/state/javax/media/j3d/ImageComponentState.java
index 4864331..ecf6afb 100644
--- a/j3d-core-utils/src/classes/share/com/sun/j3d/utils/scenegraph/io/state/javax/media/j3d/ImageComponentState.java
+++ b/j3d-core-utils/src/classes/share/com/sun/j3d/utils/scenegraph/io/state/javax/media/j3d/ImageComponentState.java
@@ -59,12 +59,7 @@ import javax.media.j3d.ImageComponent;
 import com.sun.j3d.utils.scenegraph.io.retained.Controller;
 import com.sun.j3d.utils.scenegraph.io.retained.SymbolTableData;
 import com.sun.j3d.utils.scenegraph.io.retained.SGIORuntimeException;
-import java.awt.color.ColorSpace;
-import java.awt.image.DataBuffer;
-import com.sun.image.codec.jpeg.JPEGImageEncoder;
-import com.sun.image.codec.jpeg.JPEGImageDecoder;
-import com.sun.image.codec.jpeg.JPEGCodec;
-import com.sun.image.codec.jpeg.JPEGEncodeParam;
+import javax.imageio.ImageIO;
 
 public abstract class ImageComponentState extends NodeComponentState {
 
@@ -192,7 +187,9 @@ public abstract class ImageComponentState extends NodeComponentState {
         
         dataOut.flush();
         gzipStream.finish();
-        
+        if (!ImageIO.write(image, "jpeg", byteStream)) {
+            throw new AssertionError("No JPEG encoder available");
+        }
         
         byte[] buffer = byteStream.toByteArray();
         
@@ -200,13 +197,9 @@ public abstract class ImageComponentState extends NodeComponentState {
         out.write( buffer);
         dataOut.close();        
     }
-    
+
     private void writeBufferedImageJpegCompression( DataOutput out, BufferedImage image ) throws IOException {
         ByteArrayOutputStream byteStream = new ByteArrayOutputStream();
-        JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder( byteStream );
-
-        encoder.encode( image );
-        byteStream.close();
         
         byte[] buffer = byteStream.toByteArray();
         out.writeInt( buffer.length );
@@ -255,17 +248,22 @@ public abstract class ImageComponentState extends NodeComponentState {
         
         return new BufferedImage( colorModel, raster, alphaPremult, null );
     }
-    
+
     private BufferedImage readBufferedImageJpegCompression( DataInput in ) throws IOException {  
         int size = in.readInt();
         byte[] buffer = new byte[ size ];
         in.readFully( buffer );
         ByteArrayInputStream byteStream = new ByteArrayInputStream( buffer );
         
-        JPEGImageDecoder decoder = JPEGCodec.createJPEGDecoder( byteStream );
-        byteStream.close();
-        
-        return decoder.decodeAsBufferedImage();
+        try {
+            BufferedImage img = ImageIO.read(byteStream);
+            if (img == null) {
+                throw new AssertionError("No ImageReader available.");
+            }
+            return img;
+        } finally {
+            byteStream.close();
+        }
     }
     
     private void writeColorModel( DataOutput out, ColorModel colorModel ) throws IOException {
-- 
1.7.9.5


From 5fa706c6845f46b0dab1a240e4053282b80d4bc4 Mon Sep 17 00:00:00 2001
From: Timo Rantalainen <tjrantal@gmail.com>
Date: Sat, 25 Aug 2012 09:07:43 +0300
Subject: [PATCH 3/3] Fixed a bug...

---
 j3d-core/src/native/build.xml |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/j3d-core/src/native/build.xml b/j3d-core/src/native/build.xml
index 881e268..c7aa728 100644
--- a/j3d-core/src/native/build.xml
+++ b/j3d-core/src/native/build.xml
@@ -347,7 +347,7 @@
     <javah destdir="${javahCoreTarget}" force="yes">
 	<classpath>
 	    <pathelement path="${build}/${platform}/${bldType}/classes"/>
-		<pathelement path="${vecmath_home}/build/debug/classes"/> <!--Added vecmath to classpath>
+		<pathelement path="${vecmath_home}/build/debug/classes"/> <!--Added vecmath to classpath-->
 	</classpath>
 	
 	<class name="javax.media.j3d.Background"/>
-- 
1.7.9.5

